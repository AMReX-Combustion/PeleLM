#----------------------DOMAIN DEFINITION------------------------
geometry.is_periodic = 0 0       # Periodicity in each direction: 0 => no, 1 => yes
geometry.coord_sys   = 0         # 0 => cart, 1 => RZ
geometry.prob_lo     = 0. 0.     # x_lo y_lo
geometry.prob_hi     = 0.02 0.04 # x_hi y_hi

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# Interior, Inflow, Outflow, Symmetry,
# SlipWallAdiab, NoSlipWallAdiab, SlipWallIsotherm, NoSlipWallIsotherm
peleLM.lo_bc = Symmetry  Inflow
peleLM.hi_bc = Symmetry  Outflow

#-------------------------AMR CONTROL----------------------------
amr.n_cell          = 64 128     # Level 0 number of cells in each direction
amr.v               = 1          # amr verbosity level
amr.max_level       = 1          # maximum level number allowed
amr.ref_ratio       = 2 2 2 2    # refinement ratio
amr.regrid_int      = 2          # how often to regrid
amr.n_error_buf     = 1 1 2 2    # number of buffer cells in error est
amr.grid_eff        = 0.7        # what constitutes an efficient grid
amr.blocking_factor = 16         # block factor in grid generation
amr.max_grid_size   = 32         # maximum box size

#----------------------TIME STEPING CONTROL----------------------
max_step       = 2500            # maximum number of time steps
stop_time      = 4.00            # final physical time
ns.cfl         = 0.1             # cfl number for hyperbolic system
ns.init_shrink = 0.01            # scale back initial timestep
ns.change_max  = 1.1             # max timestep size increase
ns.dt_cutoff   = 5.e-10          # level 0 timestep below which we halt

#-------------------------IO CONTROL----------------------------
amr.restart = chk00050           # Restart from checkpoint ?
amr.regrid_on_restart = 1        # Perform regriding upon restart ?
amr.checkpoint_files_output = 1  # Dump check file ? 0: no, 1: yes
amr.check_file      = chk        # root name of checkpoint file
amr.check_int       = 50         # number of timesteps between checkpoints
amr.plot_file       = plt        # root name of plotfiles   
amr.plot_int        = 20         # number of timesteps between plotfiles
amr.derive_plot_vars= sumRhoYdot rhoRT mag_vort avg_pressure gradpx gradpy diveru mass_fractions mole_fractions molweight rhominsumrhoY cc_transport_coeffs cpmix enthalpy mixfrac_only
amr.grid_log        = grdlog     # name of grid logging file
amr.probin_file = probin.2d.test # This will default to file "probin" if not set

#--------------------REFINEMENT CONTROL------------------------
amr.refinement_indicators = hi_temp gradT flame_tracer   # Declare set of refinement indicators

amr.hi_temp.max_level     = 1
amr.hi_temp.value_greater = 800
amr.hi_temp.field_name    = temp

amr.gradT.max_level                   = 1
amr.gradT.adjacent_difference_greater = 300
amr.gradT.field_name                  = temp

amr.flame_tracer.max_level     = 3
amr.flame_tracer.value_greater = 5.0e-6
amr.flame_tracer.field_name    = Y(HCO)

#---------------------PHYSICS CONTROL------------------------
ns.fuelName               = CH4             # Fuel species name
ns.unity_Le               = 0               # Use unity Lewis number assumption
ns.hack_nochem            = 0               # Bypass chemistry ? 0: no, 1: yes

ns.do_active_control      = 0               # Activate inflow velocity control 
ns.do_active_control_temp = 0               # Use control by temperature
ns.temp_control           = 1400.0          # Temperature threshold for control 

#--------------------NUMERICS CONTROL------------------------
ns.num_divu_iters = 3            # Number of DivU iteration at initialization
ns.init_iter      = 3            # number of init iters to define pressure
ns.sdc_iterMAX    = 2            # Number of SDC iterations




# ---------------------------------------------------------------
# ------------------  ADVANCED USER INPUTS ----------------------
# ---------------------------------------------------------------
#
# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.visc_tol        = 1.0e-12  # tolerence for viscous solves
ns.visc_abs_tol    = 1.0e-12  # tolerence for viscous solves
ns.gravity        = 0        # body force  (gravity in MKS units)
ns.sum_interval   = 1        # timesteps between computing mass
ns.do_reflux      = 1        # 1 => do refluxing
ns.do_mac_proj    = 1        # 1 => do MAC projection

ns.do_sync_proj   = 1        # 1 => do Sync Project
ns.do_MLsync_proj = 1
ns.do_divu_sync = 0
ns.divu_relax_factor   = 0.0

ns.be_cn_theta = 0.5

ns.do_temp = 1

ns.do_diffuse_sync = 1
ns.do_reflux_visc  = 1

ns.divu_ceiling = 1
ns.divu_dt_factor = .4
ns.min_rho_divu_ceiling = .01

ns.do_fillPatchUMAC=1
ns.zeroBndryVisc=1

# ------------------  INPUTS TO CVODE CHEMISTRY ----------------------
#peleLM.use_typ_vals_chem = 1
#peleLM.relative_tol_chem = 1.0e-8
#peleLM.absolute_tol_chem = 1.0e-6
cvode.solve_type = dense
ode.analytical_jacobian = 0

# ------------------  INPUTS TO GODUNOV CLASS ----------------------
godunov.slope_order = 4

# ------------------  INPUTS TO DIFFUSION CLASS --------------------
diffuse.use_cg_solve = 0
diffuse.max_order = 4
diffuse.tensor_max_order = 4
diffuse.use_tensor_cg_solve = 0
diffuse.v = 0
diffuse.Rhs_in_abs_tol = 1

# ------------------  INPUTS TO PROJECTION CLASS -------------------
proj.proj_tol       = 1.0e-12  # tolerence for projections
proj.proj_abs_tol   = 1.0e-12
proj.sync_tol       = 1.0e-12  # tolerence for projections
proj.rho_wgt_vel_proj = 0      # 0 => const den proj, 1 => rho weighted
nodal_proj.verbose          = 0
proj.filter_factor  = 0.0
proj.do_outflow_bcs = 0
proj.divu_minus_s_factor = .5
proj.divu_minus_s_factor = 0.
proj.proj_2 = 1

# ------------------  INPUTS TO MACPROJ CLASS -------------------
mac.mac_tol        = 1.0e-12  # tolerence for mac projections
mac.mac_sync_tol   = 1.0e-12   # tolerence for mac SYNC projection
mac.mac_abs_tol    = 1.0e-12
mac.use_cg_solve   = 0
mac.do_outflow_bcs = 0

#--------------------------MISC/UNSORTED INPUTS-----------------------------

mg.smooth_on_cg_unstable=1

# multigrid class
mg.usecg = 1
cg.v = 0
cg.isExpert=1
mg.v = 0
cg.maxiter = 1000
mg.maxiter = 1000
mg.nu_0 = 1
mg.nu_1 = 4
mg.nu_2 = 4
mg.nu_f = 40
cg.unstable_criterion = 100
ns.htt_tempmin=1.0
ns.htt_tempmax=2.5
ns.v = 1
mac.v = 2
proj.v = 1
ns.do_group_bndry_fills = 1

cg.cg_solver=1

#
# Select form of FAB output: default is NATIVE
#
#   ASCII  (this is very slow)
#   NATIVE (native binary form on machine -- the default)
#   IEEE32 (useful if you want 32bit files when running in double precision)
#   8BIT   (eight-bit run-length-encoded)
#
fab.format = NATIVE

#fabarray.mfiter_tile_size = 8 8 8 
amrex.regtest_reduction=1

#amrex.fpe_trap_invalid=1
#amrex.fpe_trap_overflow=1
#amrex.fpe_trap_zero=1
