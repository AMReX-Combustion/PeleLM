#. ----------------  PROBLEM DEPENDENT INPUTS
geometry.is_periodic = 1 1 1

geometry.coord_sys = 0  # 0 => cart, 1 => RZ

geometry.prob_lo   = -0.04 -0.04 0.0
geometry.prob_hi   = 0.12 0.04 0.005

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# Interior, Inflow, Outflow, Symmetry,
# SlipWallAdiab, NoSlipWallAdiab, SlipWallIsotherm, NoSlipWallIsotherm

peleLM.lo_bc = Interior  Interior Interior
peleLM.hi_bc = Interior  Interior Interior


#peleLM.lo_bc =  Outflow  Inflow
#peleLM.hi_bc =  Outflow  Outflow

#----------------------------TOP LEVEL INPUTS----------------------
max_step  = 700 
stop_time = 10.0

#-------------------------AMR INPUTS----------------------------
amr.n_cell    = 128 64 
amr.n_cell    = 32 16

amr.v=1
amr.max_level =  0            # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.regrid_int      = 2       # how often to regrid
amr.n_error_buf     = 2 2 2 2 # number of buffer cells in error est
amr.grid_eff        = 0.9     # what constitutes an efficient grid
amr.blocking_factor = 8      # block factor in grid generation

amr.checkpoint_files_output = 0
amr.check_file      = chk     # root name of checkpoint file
amr.check_int       = 10       # number of timesteps between checkpoints

amr.plot_file       = plt_
amr.plot_int        = 1
amr.derive_plot_vars=rhoRT mag_vort avg_pressure gradpx gradpy diveru mass_fractions rhoY rhominsumrhoY

amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256 

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff       = 5.e-10   # level 0 timestep below which we halt
ns.visc_tol        = 1.0e-12  # tolerence for viscous solves
ns.visc_abs_tol    = 1.0e-12  # tolerence for viscous solves
ns.cfl            = 0.2     # cfl number for hyperbolic system
ns.init_shrink    = 1.0       # scale back initial timestep
ns.change_max     = 1.1       # scale back initial timestep
ns.init_iter      = 3        # number of init iters to def pressure
ns.gravity        = 0        # body force  (gravity in MKS units)
ns.sum_interval   = 1        # timesteps between computing mass
ns.do_reflux      = 1        # 1 => do refluxing
ns.do_mac_proj    = 1        # 1 => do MAC projection

ns.do_sync_proj   = 1        # 1 => do Sync Project
ns.do_MLsync_proj = 1
ns.do_divu_sync = 0
ns.divu_relax_factor   = 0.0

ns.be_cn_theta = 0.5

ns.do_temp = 1

ns.do_diffuse_sync = 1
ns.do_reflux_visc  = 1

ns.divu_ceiling = 1
#ns.divu_dt_factor = .4
ns.min_rho_divu_ceiling = .01

ns.fuelName        = N2
ns.unity_Le = 0
ns.hack_nochem = 0
ns.sdc_iterMAX = 2


ns.do_fillPatchUMAC=1
ns.zeroBndryVisc=1
ns.num_divu_iters = 1

# ------------------  INPUTS TO CVODE CHEMISTRY ----------------------
#peleLM.use_typ_vals_chem = 1
#peleLM.relative_tol_chem = 1.0e-8
#peleLM.absolute_tol_chem = 1.0e-6
cvode.solve_type = dense
ode.analytical_jacobian = 0

# ----------------  INPUTS TO CONSTANT TRANSPORT -------------------
transport.const_viscosity = 0.0
transport.const_bulk_viscosity = 0.0
transport.const_conductivity = 0.0
transport.const_diffusivity = 0.0

prob.meanFlowMag = 10.0

# ------------------  INPUTS TO GODUNOV CLASS ----------------------
godunov.slope_order = 4

# ------------------  INPUTS TO DIFFUSION CLASS --------------------
diffuse.max_order = 4
diffuse.tensor_max_order = 4
diffuse.use_tensor_cg_solve = 0
diffuse.v = 0
diffuse.Rhs_in_abs_tol = 1

# ------------------  INPUTS TO PROJECTION CLASS -------------------
proj.proj_tol       = 1.0e-12  # tolerence for projections
proj.proj_abs_tol   = 1.0e-12
proj.sync_tol       = 1.0e-12  # tolerence for projections
proj.rho_wgt_vel_proj = 0      # 0 => const den proj, 1 => rho weighted
nodal_proj.verbose    = 0 
proj.filter_factor  = 0.0
proj.do_outflow_bcs = 0
proj.divu_minus_s_factor = .5
proj.divu_minus_s_factor = 0.
proj.proj_2 = 1

# ------------------  INPUTS TO MACPROJ CLASS -------------------
mac.mac_tol        = 1.0e-12 # tolerence for mac projections
mac.mac_sync_tol   = 1.0e-12  # tolerence for mac SYNC projection
mac.mac_abs_tol    = 1.0e-12
mac.do_outflow_bcs = 0

#--------------------------MISC/UNSORTED INPUTS-----------------------------
# multigrid class
#mg.smooth_on_cg_unstable=1
mg.v = 0 
mg.maxiter = 1000
mg.nu_0 = 1
mg.nu_1 = 4
mg.nu_2 = 4
mg.nu_f = 40
ns.htt_tempmin=1.0
ns.htt_tempmax=2.5
ns.v = 2
mac.v = 2
proj.v = 2

#
# Select form of FAB output: default is NATIVE
#
#   ASCII  (this is very slow)
#   NATIVE (native binary form on machine -- the default)
#   IEEE32 (useful if you want 32bit files when running in double precision)
#   8BIT   (eight-bit run-length-encoded)
#
fab.format = NATIVE

#fabarray.mfiter_tile_size = 8 8 8

# Embedded Boundary options
eb2.geom_type     = sphere
eb2.sphere_radius =  0.0060
eb2.sphere_center = 0.02  0.00  # don't forget probin: adv_dir !=1
eb2.sphere_has_fluid_inside = 0

# Refinement according to the vorticity, no field_name needed
amr.refinement_indicators =  gradY
amr.gradY.max_level = 2
amr.gradY.adjacent_difference_greater = 0.005
amr.gradY.field_name = Y(O2)


amrex.fpe_trap_invalid = 1
amrex.fpe_trap_zero = 1
amrex.fpe_trap_overflow = 1

