EBASE = PeleLM
PELE_PHYSICS_HOME ?= $(SUBMODS)/PelePhysics

USE_SUNDIALS = TRUE
BL_NO_FORT = TRUE

include $(AMREX_HOME)/Tools/GNUMake/Make.defs 
#$(info LIBRARIES_BeginPeleMake="$(LIBRARIES)")

Bdirs += $(PELELM_HOME)/Source

ifeq ($(shell uname),Darwin)
  LDFLAGS += -headerpad_max_install_names
  all: $(executable)
	install_name_tool -add_rpath $(PELE_PHYSICS_HOME)/ThirdParty/INSTALL/$(configSpecificTPSuffix)/lib $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS
else
  all: $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS
endif


# job_info support
CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS +=  $(AMREX_HOME)/Tools/C_scripts

##############################################################
# PelePhysics
##############################################################
# EOS models switches
ifeq ($(Eos_Model),$(filter $(Eos_Model),GammaLaw))
   DEFINES += -DUSE_GAMMALAW_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Fuego))
   DEFINES += -DUSE_FUEGO_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Soave-Redlich-Kwong))
   DEFINES += -DUSE_SRK_EOS
endif

# Transport model switches
ifeq ($(Transport_Model), Simple)
  DEFINES += -DUSE_SIMPLE_TRANSPORT
endif
ifeq ($(Transport_Model), EGLib)
  DEFINES += -DEGLIB_TRANSPORT
  USE_FUEGO = TRUE
endif
ifeq ($(Transport_Model), Constant)
  DEFINES += -DUSE_CONSTANT_TRANSPORT
endif
ifeq ($(Transport_Model), Sutherland)
  DEFINES += -DUSE_SUTHERLAND_TRANSPORT
endif

ifeq ($(PELE_USE_KLU), TRUE)
  DEFINES += -DPELE_USE_KLU
endif

ChemDir  = Support/Fuego/Mechanism/Models/$(Chemistry_Model)

PPdirs  := Utility/PMF Utility/TurbInflow Utility/PltFileManager Source $(ChemDir) Reactions Eos Transport
PPHdirs := Support/Fuego/Evaluation

Bpack += $(foreach dir, $(PPdirs), $(PELE_PHYSICS_HOME)/$(dir)/Make.package)
Blocs += $(foreach dir, $(PPdirs), $(PELE_PHYSICS_HOME)/$(dir))
Blocs += $(foreach dir, $(PPHdirs), $(PELE_PHYSICS_HOME)/$(dir))
include $(PELE_PHYSICS_HOME)/ThirdParty/Make.ThirdParty

#
# Tells IAMR not to include the following: NS_error.cpp NS_setup.cpp NSBld.cpp
#                                          NavierStokes.cpp NavierStokes.H
#
SKIP_NS_SPECIFIC_CODE = TRUE

# IAMR
Bdirs += $(IAMR_HOME)/Source
Bdirs += $(IAMR_HOME)/Source/Utilities
Bdirs += $(AMREX_HYDRO_HOME)/Utils
Bdirs += $(AMREX_HYDRO_HOME)/Godunov
Bdirs += $(AMREX_HYDRO_HOME)/BDS
Bdirs += $(AMREX_HYDRO_HOME)/MOL
Bdirs += $(AMREX_HYDRO_HOME)/Slopes
Bdirs += $(AMREX_HYDRO_HOME)/Projections
ifeq ($(USE_EB), TRUE)
   Bdirs += $(AMREX_HYDRO_HOME)/Redistribution
   Bdirs += $(AMREX_HYDRO_HOME)/EBGodunov
   Bdirs += $(AMREX_HYDRO_HOME)/EBMOL
endif

Bpack	+= $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(dir))

# AMReX 
Pdirs   += $(AMREX_HOME)/Src/Base
Pdirs   += $(AMREX_HOME)/Src/AmrCore
Pdirs   += $(AMREX_HOME)/Src/Amr
Pdirs   += $(AMREX_HOME)/Src/Boundary
ifeq ($(USE_PARTICLES), TRUE)
  Pdirs += $(AMREX_HOME)/Src/Particle
endif
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/MLMG

ifeq ($(USE_EB), TRUE)
  Pdirs   += $(AMREX_HOME)/Src/EB
endif

Bpack	+= $(foreach dir, $(Pdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(dir))

include $(Bpack) 
INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

#include $(AMREX_HOME)/Src/F_Interfaces/Base/Make.package
#INCLUDE_LOCATIONS += $(AMREX_HOME)/Src/F_Interfaces/Base
#VPATH_LOCATIONS   += $(AMREX_HOME)/Src/F_Interfaces/Base

# Hack in some LM-specific stuff

# Enable time-dependent turbulence forcing term
ifeq ($(USE_TDEPFORCING), TRUE)
  ifeq ($(DIM), 3)
    DEFINES += -DGENGETFORCE
    DEFINES += -DDO_LMC_FORCE
  endif
endif

DEFINES += -DCG_USE_OLD_CONVERGENCE_CRITERIA

ifeq ($(USE_BGL),TRUE)
  MACHINE=BGL
  CXX=mpicxx.ibm
  FC=blrts_xlf
  fC=blrts_xlf
  CPPFLAGS+= -DMPICH_SKIP_MPICXX
  LDFLAGS+=-L/bgl/BlueLight/ppcfloor/bglsys/lib
  LDFLAGS+=-L/opt/ibmcmp/xlf/bg/10.1/blrts_lib
  BL_MPI_LIBS=-lxlf90 -lxlfmath
  FORTLINK:=LOWERCASE
endif
 
ifeq ($(USE_METIS),TRUE)
  Bdirs += metis-4.0/Lib
  DEFINES += -DBL_USE_METIS
endif

ifeq ($(REGRESSIONTEST),TRUE)
  DEFINES += -DREGRESSIONTEST
endif

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --MODULES "Chemistry=$(Chemistry_Model)" \
          --GIT "$(PELELM_HOME) $(AMREX_HOME) $(IAMR_HOME) $(AMREX_HYDRO_HOME) $(PELE_PHYSICS_HOME)"

#$(info LIBRARIES_inPeleMake="$(LIBRARIES)")
include $(AMREX_HOME)/Tools/GNUMake/Make.rules

##$(objForExecs): TPL

ifeq ($(USE_CUDA),TRUE)
   CXXFLAGS+=-Xptxas --disable-optimizer-constants
endif

#$(info LIBRARIES_EndPeleMake="$(LIBRARIES)")
clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp

TPL:
	@echo "==> Building SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty && $(MAKE) $(MAKEFLAGS) sundials AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) PELE_USE_KLU=$(PELE_USE_KLU) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP)

TPLclean:
	@echo "==> Removing SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty && $(MAKE) AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) PELE_USE_KLU=$(PELE_USE_KLU) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) clean

TPLrealclean:
	@echo "==> Removing SUNDIALS library"
	@cd $(PELE_PHYSICS_HOME)/ThirdParty && $(MAKE) AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) PELE_USE_KLU=$(PELE_USE_KLU) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) realclean
