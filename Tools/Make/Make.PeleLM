
EBASE = PeleLM

include $(AMREX_HOME)/Tools/GNUMake/Make.defs 

Bdirs += $(PELELM_HOME)/Source $(PELELM_HOME)/Source/Src_$(DIM)d $(PELELM_HOME)/Source/Src_nd

ifeq ($(USE_WBAR),TRUE)
    USERSuffix += .WBAR
    DEFINES += -DUSE_WBAR
endif

all: $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

PELE_PHYSICS_HOME ?= $(TOP)/PelePhysics
EOS_HOME       = $(PELE_PHYSICS_HOME)/Eos
REACTIONS_HOME = $(PELE_PHYSICS_HOME)/Reactions
TRAN_HOME      = $(PELE_PHYSICS_HOME)/Transport

# EOS
EOS_PATH := $(EOS_HOME)/$(strip $(Eos_dir))
include $(EOS_HOME)/Make.package
include $(EOS_PATH)/Make.package
EXTERN_CORE       += $(EOS_HOME) $(EOS_PATH)
INCLUDE_LOCATIONS += $(EOS_HOME) $(EOS_PATH)
VPATH_LOCATIONS   += $(EOS_HOME) $(EOS_PATH)
ifeq ($(Eos_dir), Fuego)
  TRANSPORT_TYPE := IDEAL_GAS
else
  ifeq ($(Eos_dir), GammaLaw)
    TRANSPORT_TYPE := IDEAL_GAS
  else
    TRANSPORT_TYPE := REAL_GAS
  endif
endif

# Reactions
ifeq ($(USE_SUNDIALS_PP),TRUE) 
  include $(PELE_PHYSICS_HOME)/ThirdParty/Make.ThirdParty
endif
REACTIONS_PATH := $(REACTIONS_HOME)/$(strip $(Reactions_dir))
include $(REACTIONS_HOME)/Make.package
include $(REACTIONS_PATH)/Make.package
EXTERN_CORE       += $(REACTIONS_HOME) $(REACTIONS_PATH)
INCLUDE_LOCATIONS += $(REACTIONS_HOME) $(REACTIONS_PATH)
VPATH_LOCATIONS   += $(REACTIONS_HOME) $(REACTIONS_PATH)
ifdef Chemistry_Model
  CHEM_DIR = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Models/$(Chemistry_Model)
  CHEM_ALL = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Models
  ifdef CHEM_DIR
    VPATH_LOCATIONS += $(CHEM_DIR) $(CHEM_ALL)
    Bpack += $(CHEM_DIR)/Make.package \
             $(CHEM_ALL)/Make.package
    Blocs += $(CHEM_DIR) $(CHEM_ALL)
  else
   $(error Invalid Chemistry_Model, $(Chemistry_Model))
  endif
  CHEM_HOME1 = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism
  VPATH_LOCATIONS += $(CHEM_HOME1)
  Bpack += $(CHEM_HOME1)/Make.package
  Blocs += $(CHEM_HOME1)
endif

# Transport
TRAN_PATH := $(TRAN_HOME)/$(strip $(Transport_dir))
include $(TRAN_HOME)/Make.package
include $(TRAN_PATH)/Make.package
EXTERN_CORE       += $(TRAN_HOME) $(TRAN_PATH)
INCLUDE_LOCATIONS += $(TRAN_HOME) $(TRAN_PATH)
VPATH_LOCATIONS   += $(TRAN_HOME) $(TRAN_PATH)
USE_FUEGO = FALSE
ifeq ($(Transport_dir), EGLib)
  USE_FUEGO = TRUE
  DEFINES += -DEGLIB_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif

ifeq ($(Transport_dir), Sutherland)
  USE_FUEGO = TRUE
  DEFINES += -DSUTHERLAND_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif

ifeq ($(Transport_dir), Simple)
  DEFINES += -DSIMPLE_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif
ifeq ($(Transport_dir), Constant)
  DEFINES += -DCONSTANT_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif

#
# Tells IAMR not to include the following: NS_error.cpp NS_setup.cpp NSBld.cpp
#                                          NavierStokes.cpp NavierStokes.H
#
SKIP_NS_SPECIFIC_CODE = TRUE

# IAMR
Bdirs += $(IAMR_HOME)/Source
Bdirs += $(IAMR_HOME)/Source/Src_$(DIM)d

Bpack	+= $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(dir))

# BoxLib 
Pdirs   += $(AMREX_HOME)/Src/Base
Pdirs   += $(AMREX_HOME)/Src/AmrCore
Pdirs   += $(AMREX_HOME)/Src/Amr
Pdirs   += $(AMREX_HOME)/Src/Boundary
ifeq ($(USE_PARTICLES), TRUE)
  Pdirs += $(AMREX_HOME)/Src/Particle
endif
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/C_CellMG
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/C_TensorMG
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/MLMG

Bpack	+= $(foreach dir, $(Pdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(dir))

include $(Bpack) 
INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

#include $(AMREX_HOME)/Src/F_Interfaces/Base/Make.package
#INCLUDE_LOCATIONS += $(AMREX_HOME)/Src/F_Interfaces/Base
#VPATH_LOCATIONS   += $(AMREX_HOME)/Src/F_Interfaces/Base

ifeq ($(USE_FLCTS), TRUE)
  DEFINES += -DBL_DO_FLCT
  include $(IAMR_HOME)/Source/TurbInflow/Make.package
  VPATH_LOCATIONS += $(IAMR_HOME)/Source/TurbInflow
  EXTERN_CORE += $(IAMR_HOME)/Source/TurbInflow
endif

# runtime parameter support for extern/ routines
f90EXE_sources += extern.f90

EXTERN_TEMPLATE := $(PELE_PHYSICS_HOME)/Testing/Source/extern_probin.template

EXTERN_PARAMETERS := $(shell $(AMREX_HOME)/Tools/F_scripts/findparams.py $(EXTERN_CORE))

extern.f90: $(EXTERN_PARAMETERS) $(EXTERN_TEMPLATE)
	$(AMREX_HOME)/Tools/F_scripts/write_probin.py \
           -t $(EXTERN_TEMPLATE) -o extern.f90 -n extern \
           --pa "$(EXTERN_PARAMETERS)" 

# Hack in some LM-specific stuff

ifeq ($(USE_VELOCITY), TRUE)
  AMRVIS_HOME = $(AMREX_HOME)/Src/Extern/amrdata
  include $(PELELM_HOME)/Tools/Make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_HOME)
  VPATH_LOCATIONS   += $(AMRVIS_HOME)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_VELOCITY -DBL_PARALLEL_IO
endif

ifeq ($(USE_NEWMECH), TRUE)
  AMRVIS_HOME = $(AMREX_HOME)/Src/Extern/amrdata
  include $(PELELM_HOME)/LMC/Tools/Make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_HOME)
  VPATH_LOCATIONS   += $(AMRVIS_HOME)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_NEWMECH -DBL_PARALLEL_IO
endif

# Enable time-dependent turbulence forcing term
ifeq ($(USE_TDEPFORCING), TRUE)
  ifeq ($(DIM), 3)
    DEFINES += -DGENGETFORCE
    DEFINES += -DDO_LMC_FORCE
  endif
endif

DEFINES += -DCG_USE_OLD_CONVERGENCE_CRITERIA

ifeq ($(USE_BGL),TRUE)
  MACHINE=BGL
  CXX=mpicxx.ibm
  FC=blrts_xlf
  fC=blrts_xlf
  CPPFLAGS+= -DMPICH_SKIP_MPICXX
  LDFLAGS+=-L/bgl/BlueLight/ppcfloor/bglsys/lib
  LDFLAGS+=-L/opt/ibmcmp/xlf/bg/10.1/blrts_lib
  BL_MPI_LIBS=-lxlf90 -lxlfmath
  FORTLINK:=LOWERCASE
endif
 
ifeq ($(USE_HYPRE),TRUE)
  Bdirs   += HypreABec
  HYPRE_HOME=$(HOME)/amr/hypre
  INCLUDE_LOCATIONS += $(HYPRE_HOME)/include
  LIBRARY_LOCATIONS += $(HYPRE_HOME)/lib
  LIBRARIES += -lHYPRE_struct_ls -lHYPRE_struct_mv -lHYPRE_blas -lHYPRE_utilities
  DEFINES += -DMG_USE_HYPRE
endif

ifeq ($(USE_METIS),TRUE)
  Bdirs += metis-4.0/Lib
  DEFINES += -DBL_USE_METIS
endif

ifeq ($(REGRESSIONTEST),TRUE)
  DEFINES += -DREGRESSIONTEST
endif


##$(executable):

# job_info support
CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS +=  $(AMREX_HOME)/Tools/C_scripts

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "Chemistry=$(Chemistry_Model)" \
          --GIT "$(PELELM_HOME) $(AMREX_HOME) $(IAMR_HOME)" 


include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) extern.f90
	$(SILENT) $(RM) AMReX_buildInfo.cpp

