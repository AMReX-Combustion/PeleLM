
EBASE = PeleLM

include $(AMREX_HOME)/Tools/GNUMake/Make.defs 

Bdirs += $(PELELM_HOME)/Source

# Chemistry
Bdirs += $(PELELM_HOME)/Source/ChemDriver

ifeq ($(USE_WBAR),TRUE)
    USERSuffix += .WBAR
    DEFINES += -DUSE_WBAR
endif

PELE_PHYSICS_HOME ?= $(TOP)/PelePhysics
CHEM_HOME = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Models

ifeq ($(Chemistry_Model), CHEMH)
  CHEM_DIR = $(CHEM_HOME)/chem-H
endif
ifeq ($(Chemistry_Model), DRM19)
  CHEM_DIR = $(CHEM_HOME)/drm19
endif
ifeq ($(Chemistry_Model), GRI30)
  CHEM_DIR = $(CHEM_HOME)/grimech30
endif
ifeq ($(Chemistry_Model), C12WANG)
  CHEM_DIR = $(CHEM_HOME)/dodecane_wang
endif
ifeq ($(Chemistry_Model), C12LU)
  CHEM_DIR = $(CHEM_HOME)/dodecane_lu
endif
ifeq (${Chemistry_Model}, BURKEMOD)
  CHEM_DIR = $(CHEM_HOME)/BurkeDryer_mod
endif
ifeq (${Chemistry_Model}, LUDME)
  CHEM_DIR = $(CHEM_HOME)/LuDME
endif
ifeq ($(Chemistry_Model), JL4)
  CHEM_DIR = $(CHEM_HOME)/JL4
endif
ifeq ($(Chemistry_Model), CH4-15step)
  CHEM_DIR = $(CHEM_HOME)/CH4-15step
endif
ifeq ($(Chemistry_Model), LIDRYER)
  CHEM_DIR = $(CHEM_HOME)/LiDryer
endif
ifeq ($(Chemistry_Model), AIR)
  CHEM_DIR = $(CHEM_HOME)/air
endif

ifdef CHEM_DIR
  VPATH_LOCATIONS += $(CHEM_DIR)
  Bpack += $(CHEM_DIR)/Make.package
  Blocs += $(CHEM_DIR)
else
 $(error Invalid Chemistry_Model, $(Chemistry_Model))
endif

#
# Tells IAMR not to include the following: NS_error.cpp NS_setup.cpp NSBld.cpp
#                                          NavierStokes.cpp NavierStokes.H
#
SKIP_NS_SPECIFIC_CODE = TRUE

# IAMR
Bdirs += $(IAMR_HOME)/Source
Bdirs += $(IAMR_HOME)/Source/Src_$(DIM)d
Bdirs += $(IAMR_HOME)/Source/InflowForce

Bpack	+= $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(dir))

# BoxLib 
Pdirs   += $(AMREX_HOME)/Src/Base
Pdirs   += $(AMREX_HOME)/Src/AmrCore
Pdirs   += $(AMREX_HOME)/Src/Amr
Pdirs   += $(AMREX_HOME)/Src/Boundary
ifeq ($(USE_PARTICLES), TRUE)
  Pdirs += $(AMREX_HOME)/Src/Particle
endif
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/C_CellMG
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/C_TensorMG
Pdirs   += $(AMREX_HOME)/Src/LinearSolvers/MLMG

Bpack	+= $(foreach dir, $(Pdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(dir))

include $(Bpack) 
INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

# Hack in some LM-specific stuff

ifeq ($(USE_FLCTS), TRUE)
  DEFINES += -DBL_DO_FLCT
  include $(PELELM_HOME)/Tools/Make/flucts.mk
endif

ifeq ($(USE_VELOCITY), TRUE)
  AMRVIS_HOME = $(AMREX_HOME)/Src/Extern/amrdata
  include $(PELELM_HOME)/Tools/Make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_HOME)
  VPATH_LOCATIONS   += $(AMRVIS_HOME)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_VELOCITY -DBL_PARALLEL_IO
endif

ifeq ($(USE_NEWMECH), TRUE)
  AMRVIS_HOME = $(AMREX_HOME)/Src/Extern/amrdata
  include $(PELELM_HOME)/LMC/Tools/Make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_HOME)
  VPATH_LOCATIONS   += $(AMRVIS_HOME)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_NEWMECH -DBL_PARALLEL_IO
endif

# Enable time-dependent turbulence forcing term
ifeq ($(USE_TDEPFORCING), TRUE)
  ifeq ($(DIM), 3)
    DEFINES += -DGENGETFORCE
    DEFINES += -DDO_LMC_FORCE
  endif
endif

DEFINES += -DCG_USE_OLD_CONVERGENCE_CRITERIA

ifeq ($(USE_BGL),TRUE)
  MACHINE=BGL
  CXX=mpicxx.ibm
  FC=blrts_xlf
  fC=blrts_xlf
  CPPFLAGS+= -DMPICH_SKIP_MPICXX
  LDFLAGS+=-L/bgl/BlueLight/ppcfloor/bglsys/lib
  LDFLAGS+=-L/opt/ibmcmp/xlf/bg/10.1/blrts_lib
  BL_MPI_LIBS=-lxlf90 -lxlfmath
  FORTLINK:=LOWERCASE
endif
 
ifeq ($(USE_HYPRE),TRUE)
  Bdirs   += HypreABec
  HYPRE_HOME=$(HOME)/amr/hypre
  INCLUDE_LOCATIONS += $(HYPRE_HOME)/include
  LIBRARY_LOCATIONS += $(HYPRE_HOME)/lib
  LIBRARIES += -lHYPRE_struct_ls -lHYPRE_struct_mv -lHYPRE_blas -lHYPRE_utilities
  DEFINES += -DMG_USE_HYPRE
endif

ifeq ($(USE_METIS),TRUE)
  Bdirs += metis-4.0/Lib
  DEFINES += -DBL_USE_METIS
endif

ifeq ($(REGRESSIONTEST),TRUE)
  DEFINES += -DREGRESSIONTEST
endif

all: $(executable)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

$(executable):

# job_info support
CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS +=  $(AMREX_HOME)/Tools/C_scripts

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "Chemistry=$(Chemistry_Model)" \
          --GIT "$(PELELM_HOME) $(AMREX_HOME) $(IAMR_HOME)" 


include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp
